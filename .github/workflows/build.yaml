name: build

on:
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (to use BuildKit for better caching and features)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: patrick-star:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker

      - name: Test container start
        env:
          URL: ${{ secrets.URL }}
          STORE_PAGE1: ${{ secrets.STORE_PAGE1 }}
          STORE_PAGE2: ${{ secrets.STORE_PAGE2 }}
          STORE_PAGE3: ${{ secrets.STORE_PAGE3 }}
          STORE_PAGE4: ${{ secrets.STORE_PAGE4 }}
          STORE_PAGE5: ${{ secrets.STORE_PAGE5 }}
          NTFY_URL: ${{ secrets.NTFY_URL }}
          WEBHOOK: ${{ secrets.WEBHOOK }}
        run: |
          if docker run --name test-container \
            -e URL=${URL} \
            -e STORE_PAGE1=${STORE_PAGE1} \
            -e STORE_PAGE2=${STORE_PAGE2} \
            -e STORE_PAGE3=${STORE_PAGE3} \
            -e STORE_PAGE4=${STORE_PAGE4} \
            -e STORE_PAGE5=${STORE_PAGE5} \
            -e NTFY_URL=${NTFY_URL} \
            -e WEBHOOK=${WEBHOOK} \
            -d patrick-star:test; then
            echo "exit_code=0" >> $GITHUB_OUTPUT
          else
            echo "exit_code=1" >> $GITHUB_OUTPUT
          fi

      - name: Check exit code
        if: steps.run_container.outputs.exit_code != '0'
        run: |
          echo "❌ Container failed to run successfully."
          exit 1

      - name: Success
        if: steps.run_container.outputs.exit_code == '0'
        run: echo "✅ Container ran successfully!"

      - name: Cleanup Docker resources
        if: always() # This ensures cleanup happens even if previous steps fail
        run: |
          docker rm -f test-container || true
          docker image rm patrick-star:test || true
